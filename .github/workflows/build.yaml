name: slsa-pytorch-build
run-name: slsa-pytorch-build
on: [push]
jobs:
  build-pytorch:
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    name: 'Build PyTorch'
    env:
      USE_GLOO: '0'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: actions/checkout@v2.6.0 ## Must use x.y.z format
      - uses: conda-incubator/setup-miniconda@v2.2.0
      - name: 'Install common dependencies'
        run: conda install astunparse numpy ninja pyyaml setuptools cmake cffi
      - name: 'Install libstcxx-ng' # https://stackoverflow.com/questions/48453497/anaconda-libstdc-so-6-version-glibcxx-3-4-20-not-found
        run: conda install -c anaconda libstdcxx-ng
      - name: 'Install python dependencies'
        run: conda install typing_extensions future six requests dataclasses
      - name: 'Install Linux-specific dependencies'
        run: conda install mkl mkl-include
      - name: 'Get pytorch source'
        run: |
          git clone --recursive https://github.com/pytorch/pytorch
          cd pytorch
          git submodule sync
          git submodule update --init --recursive
      - name: 'Create wheel'
        working-directory: ./pytorch
        run: |
          python3 -m pip install --upgrade build
          python3 -m build
      - name: 'Generate hashes'
        shell: bash
        id: hash
        run: |
          echo "hashes=$(sha256sum dist/* | base64 -w0)" >> "$GITHUB_OUTPUT"
      - name: 'Upload artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./pytorch/dist
      - name: list outputs
        run: find dist/
        working-directory: ./pytorch
      - name: 'Install wheel'
        working-directory: ./pytorch
        run: pip install --no-deps dist/*.whl
      - name: check if torch can be imported
        run: |
          conda activate
          python3 -c "import torch" || true
        working-directory: ./pytorch

  provenance:
    needs: [build-pytorch]
    permissions:
      actions: read
      id-token: write
      contents: write
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v1.4.0
    with:
      base64-subjects: "${{ needs.build.outputs.hashes }}"
      upload-assets: true

